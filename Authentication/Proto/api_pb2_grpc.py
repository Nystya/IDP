# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import api_pb2 as api__pb2


class JobsStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetAllServices = channel.unary_stream(
                '/api.Jobs/GetAllServices',
                request_serializer=api__pb2.Void.SerializeToString,
                response_deserializer=api__pb2.ServiceCategory.FromString,
                )
        self.GetAllSkillCategories = channel.unary_stream(
                '/api.Jobs/GetAllSkillCategories',
                request_serializer=api__pb2.ServiceCategory.SerializeToString,
                response_deserializer=api__pb2.SkillCategory.FromString,
                )
        self.GetAllSkills = channel.unary_stream(
                '/api.Jobs/GetAllSkills',
                request_serializer=api__pb2.SkillCategory.SerializeToString,
                response_deserializer=api__pb2.Skill.FromString,
                )
        self.PostJob = channel.unary_unary(
                '/api.Jobs/PostJob',
                request_serializer=api__pb2.CreateJob.SerializeToString,
                response_deserializer=api__pb2.Job.FromString,
                )
        self.GetJob = channel.unary_unary(
                '/api.Jobs/GetJob',
                request_serializer=api__pb2.ID.SerializeToString,
                response_deserializer=api__pb2.Job.FromString,
                )
        self.GetJobs = channel.unary_stream(
                '/api.Jobs/GetJobs',
                request_serializer=api__pb2.Filter.SerializeToString,
                response_deserializer=api__pb2.Job.FromString,
                )
        self.ApplyForJob = channel.unary_unary(
                '/api.Jobs/ApplyForJob',
                request_serializer=api__pb2.JobApplication.SerializeToString,
                response_deserializer=api__pb2.ErrorCode.FromString,
                )
        self.GetApplicants = channel.unary_stream(
                '/api.Jobs/GetApplicants',
                request_serializer=api__pb2.ID.SerializeToString,
                response_deserializer=api__pb2.FreelancerProfile.FromString,
                )
        self.SelectForJob = channel.unary_unary(
                '/api.Jobs/SelectForJob',
                request_serializer=api__pb2.JobSelection.SerializeToString,
                response_deserializer=api__pb2.ErrorCode.FromString,
                )
        self.GetAcceptedFreelancers = channel.unary_stream(
                '/api.Jobs/GetAcceptedFreelancers',
                request_serializer=api__pb2.ID.SerializeToString,
                response_deserializer=api__pb2.FreelancerProfile.FromString,
                )
        self.GetAcceptedJobs = channel.unary_stream(
                '/api.Jobs/GetAcceptedJobs',
                request_serializer=api__pb2.ID.SerializeToString,
                response_deserializer=api__pb2.Job.FromString,
                )
        self.GetFreelancerHistoryJobs = channel.unary_stream(
                '/api.Jobs/GetFreelancerHistoryJobs',
                request_serializer=api__pb2.ID.SerializeToString,
                response_deserializer=api__pb2.Job.FromString,
                )
        self.GetEmployerHistoryJobs = channel.unary_stream(
                '/api.Jobs/GetEmployerHistoryJobs',
                request_serializer=api__pb2.ID.SerializeToString,
                response_deserializer=api__pb2.Job.FromString,
                )
        self.FinishJob = channel.unary_unary(
                '/api.Jobs/FinishJob',
                request_serializer=api__pb2.ID.SerializeToString,
                response_deserializer=api__pb2.ErrorCode.FromString,
                )


class JobsServicer(object):
    """Missing associated documentation comment in .proto file"""

    def GetAllServices(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllSkillCategories(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllSkills(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PostJob(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetJob(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetJobs(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ApplyForJob(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetApplicants(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SelectForJob(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAcceptedFreelancers(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAcceptedJobs(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFreelancerHistoryJobs(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEmployerHistoryJobs(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FinishJob(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_JobsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetAllServices': grpc.unary_stream_rpc_method_handler(
                    servicer.GetAllServices,
                    request_deserializer=api__pb2.Void.FromString,
                    response_serializer=api__pb2.ServiceCategory.SerializeToString,
            ),
            'GetAllSkillCategories': grpc.unary_stream_rpc_method_handler(
                    servicer.GetAllSkillCategories,
                    request_deserializer=api__pb2.ServiceCategory.FromString,
                    response_serializer=api__pb2.SkillCategory.SerializeToString,
            ),
            'GetAllSkills': grpc.unary_stream_rpc_method_handler(
                    servicer.GetAllSkills,
                    request_deserializer=api__pb2.SkillCategory.FromString,
                    response_serializer=api__pb2.Skill.SerializeToString,
            ),
            'PostJob': grpc.unary_unary_rpc_method_handler(
                    servicer.PostJob,
                    request_deserializer=api__pb2.CreateJob.FromString,
                    response_serializer=api__pb2.Job.SerializeToString,
            ),
            'GetJob': grpc.unary_unary_rpc_method_handler(
                    servicer.GetJob,
                    request_deserializer=api__pb2.ID.FromString,
                    response_serializer=api__pb2.Job.SerializeToString,
            ),
            'GetJobs': grpc.unary_stream_rpc_method_handler(
                    servicer.GetJobs,
                    request_deserializer=api__pb2.Filter.FromString,
                    response_serializer=api__pb2.Job.SerializeToString,
            ),
            'ApplyForJob': grpc.unary_unary_rpc_method_handler(
                    servicer.ApplyForJob,
                    request_deserializer=api__pb2.JobApplication.FromString,
                    response_serializer=api__pb2.ErrorCode.SerializeToString,
            ),
            'GetApplicants': grpc.unary_stream_rpc_method_handler(
                    servicer.GetApplicants,
                    request_deserializer=api__pb2.ID.FromString,
                    response_serializer=api__pb2.FreelancerProfile.SerializeToString,
            ),
            'SelectForJob': grpc.unary_unary_rpc_method_handler(
                    servicer.SelectForJob,
                    request_deserializer=api__pb2.JobSelection.FromString,
                    response_serializer=api__pb2.ErrorCode.SerializeToString,
            ),
            'GetAcceptedFreelancers': grpc.unary_stream_rpc_method_handler(
                    servicer.GetAcceptedFreelancers,
                    request_deserializer=api__pb2.ID.FromString,
                    response_serializer=api__pb2.FreelancerProfile.SerializeToString,
            ),
            'GetAcceptedJobs': grpc.unary_stream_rpc_method_handler(
                    servicer.GetAcceptedJobs,
                    request_deserializer=api__pb2.ID.FromString,
                    response_serializer=api__pb2.Job.SerializeToString,
            ),
            'GetFreelancerHistoryJobs': grpc.unary_stream_rpc_method_handler(
                    servicer.GetFreelancerHistoryJobs,
                    request_deserializer=api__pb2.ID.FromString,
                    response_serializer=api__pb2.Job.SerializeToString,
            ),
            'GetEmployerHistoryJobs': grpc.unary_stream_rpc_method_handler(
                    servicer.GetEmployerHistoryJobs,
                    request_deserializer=api__pb2.ID.FromString,
                    response_serializer=api__pb2.Job.SerializeToString,
            ),
            'FinishJob': grpc.unary_unary_rpc_method_handler(
                    servicer.FinishJob,
                    request_deserializer=api__pb2.ID.FromString,
                    response_serializer=api__pb2.ErrorCode.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'api.Jobs', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Jobs(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def GetAllServices(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/api.Jobs/GetAllServices',
            api__pb2.Void.SerializeToString,
            api__pb2.ServiceCategory.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllSkillCategories(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/api.Jobs/GetAllSkillCategories',
            api__pb2.ServiceCategory.SerializeToString,
            api__pb2.SkillCategory.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAllSkills(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/api.Jobs/GetAllSkills',
            api__pb2.SkillCategory.SerializeToString,
            api__pb2.Skill.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PostJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.Jobs/PostJob',
            api__pb2.CreateJob.SerializeToString,
            api__pb2.Job.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.Jobs/GetJob',
            api__pb2.ID.SerializeToString,
            api__pb2.Job.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetJobs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/api.Jobs/GetJobs',
            api__pb2.Filter.SerializeToString,
            api__pb2.Job.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ApplyForJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.Jobs/ApplyForJob',
            api__pb2.JobApplication.SerializeToString,
            api__pb2.ErrorCode.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetApplicants(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/api.Jobs/GetApplicants',
            api__pb2.ID.SerializeToString,
            api__pb2.FreelancerProfile.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SelectForJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.Jobs/SelectForJob',
            api__pb2.JobSelection.SerializeToString,
            api__pb2.ErrorCode.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAcceptedFreelancers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/api.Jobs/GetAcceptedFreelancers',
            api__pb2.ID.SerializeToString,
            api__pb2.FreelancerProfile.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAcceptedJobs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/api.Jobs/GetAcceptedJobs',
            api__pb2.ID.SerializeToString,
            api__pb2.Job.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFreelancerHistoryJobs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/api.Jobs/GetFreelancerHistoryJobs',
            api__pb2.ID.SerializeToString,
            api__pb2.Job.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetEmployerHistoryJobs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/api.Jobs/GetEmployerHistoryJobs',
            api__pb2.ID.SerializeToString,
            api__pb2.Job.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FinishJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.Jobs/FinishJob',
            api__pb2.ID.SerializeToString,
            api__pb2.ErrorCode.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)


class ProfilesStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateEmployerProfile = channel.unary_unary(
                '/api.Profiles/CreateEmployerProfile',
                request_serializer=api__pb2.EditEmployerProfileRequest.SerializeToString,
                response_deserializer=api__pb2.ErrorCode.FromString,
                )
        self.CreateFreelancerProfile = channel.unary_unary(
                '/api.Profiles/CreateFreelancerProfile',
                request_serializer=api__pb2.EditFreelancerProfileRequest.SerializeToString,
                response_deserializer=api__pb2.ErrorCode.FromString,
                )
        self.EditEmployerProfile = channel.unary_unary(
                '/api.Profiles/EditEmployerProfile',
                request_serializer=api__pb2.EditEmployerProfileRequest.SerializeToString,
                response_deserializer=api__pb2.ErrorCode.FromString,
                )
        self.EditFreelancerProfile = channel.unary_unary(
                '/api.Profiles/EditFreelancerProfile',
                request_serializer=api__pb2.EditFreelancerProfileRequest.SerializeToString,
                response_deserializer=api__pb2.ErrorCode.FromString,
                )
        self.GetEmployerProfile = channel.unary_unary(
                '/api.Profiles/GetEmployerProfile',
                request_serializer=api__pb2.ID.SerializeToString,
                response_deserializer=api__pb2.EmployerProfile.FromString,
                )
        self.GetFreelancerProfile = channel.unary_unary(
                '/api.Profiles/GetFreelancerProfile',
                request_serializer=api__pb2.ID.SerializeToString,
                response_deserializer=api__pb2.FreelancerProfile.FromString,
                )


class ProfilesServicer(object):
    """Missing associated documentation comment in .proto file"""

    def CreateEmployerProfile(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateFreelancerProfile(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EditEmployerProfile(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EditFreelancerProfile(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEmployerProfile(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFreelancerProfile(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ProfilesServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateEmployerProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateEmployerProfile,
                    request_deserializer=api__pb2.EditEmployerProfileRequest.FromString,
                    response_serializer=api__pb2.ErrorCode.SerializeToString,
            ),
            'CreateFreelancerProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateFreelancerProfile,
                    request_deserializer=api__pb2.EditFreelancerProfileRequest.FromString,
                    response_serializer=api__pb2.ErrorCode.SerializeToString,
            ),
            'EditEmployerProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.EditEmployerProfile,
                    request_deserializer=api__pb2.EditEmployerProfileRequest.FromString,
                    response_serializer=api__pb2.ErrorCode.SerializeToString,
            ),
            'EditFreelancerProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.EditFreelancerProfile,
                    request_deserializer=api__pb2.EditFreelancerProfileRequest.FromString,
                    response_serializer=api__pb2.ErrorCode.SerializeToString,
            ),
            'GetEmployerProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEmployerProfile,
                    request_deserializer=api__pb2.ID.FromString,
                    response_serializer=api__pb2.EmployerProfile.SerializeToString,
            ),
            'GetFreelancerProfile': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFreelancerProfile,
                    request_deserializer=api__pb2.ID.FromString,
                    response_serializer=api__pb2.FreelancerProfile.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'api.Profiles', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Profiles(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def CreateEmployerProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.Profiles/CreateEmployerProfile',
            api__pb2.EditEmployerProfileRequest.SerializeToString,
            api__pb2.ErrorCode.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateFreelancerProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.Profiles/CreateFreelancerProfile',
            api__pb2.EditFreelancerProfileRequest.SerializeToString,
            api__pb2.ErrorCode.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EditEmployerProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.Profiles/EditEmployerProfile',
            api__pb2.EditEmployerProfileRequest.SerializeToString,
            api__pb2.ErrorCode.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EditFreelancerProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.Profiles/EditFreelancerProfile',
            api__pb2.EditFreelancerProfileRequest.SerializeToString,
            api__pb2.ErrorCode.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetEmployerProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.Profiles/GetEmployerProfile',
            api__pb2.ID.SerializeToString,
            api__pb2.EmployerProfile.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFreelancerProfile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/api.Profiles/GetFreelancerProfile',
            api__pb2.ID.SerializeToString,
            api__pb2.FreelancerProfile.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
